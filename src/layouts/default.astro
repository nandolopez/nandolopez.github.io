---
import type { CollectionEntry } from "astro:content";
import Header from "../components/structure/Header.astro";
import { ViewTransitions } from "astro:transitions";
// Import the global.css file here so that it is included on
import "../styles/global.css";
import { social_medias } from "@/db/Social";

/**
 * Load parameters for SEO Stuff
 */
type Props = CollectionEntry<"blog">["data"];

const { title, description, thumbnail, index } = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<html lang="en">
  <head>
    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Font preloads -->
    <link
      rel="preload"
      href="/fonts/Poppins-Bold.ttf"
      as="font"
      type="font/ttf"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/Playfair_144pt-SemiBold.ttf"
      as="font"
      type="font/ttf"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/OpenSans-Regular.ttf"
      as="font"
      type="font/ttf"
      crossorigin
    />
    {index ? <meta name="robots" content="noindex"> : ""}
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta
      property="og:image"
      content={new URL(thumbnail ?? "/public/svg_social/Logo.svg", Astro.url)}
    />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta
      property="twitter:image"
      content={new URL(thumbnail ?? "/public/svg_social/Logo.svg", Astro.url)}
    />

    <ViewTransitions />

    <script>
      /**
       * LIGHT / DARK MODE LOGIC
       */

      // Getting dark mode from user settings
      let isDarkMode: boolean = window.matchMedia(
        "(prefers-color-scheme: dark)"
      ).matches;

      // If have a preference for previous access, set the preference
      if (localStorage.getItem("DarkMode") !== null)
        isDarkMode = localStorage.getItem("DarkMode") === "true";

      const setDarkMode = (darkmode: boolean) => {
        // We asume at first time that user is light mode
        document.documentElement.classList.remove("dark");
        // If dark mode is active...
        if (darkmode) {
          //Set dark mode
          window.document.documentElement.classList.add("dark");
        }
        //Saving dark mode status
        localStorage.setItem("DarkMode", darkmode.toString());
      };

      // Check if enable or not the dark mode
      setDarkMode(isDarkMode);

      // this is for recover the back mode for Astro view transitions
      document.addEventListener("astro:after-swap", () =>
        setDarkMode(isDarkMode)
      );
    </script>
  </head>

  <body
    class="bg-sky-100 dark:bg-slate-900 dark:text-white m-0 px-4 md:p-0 max-w-screen"
  >
    <div
      class="box-content flex flex-col justify-between min-h-screen mx-auto w-full"
    >
      <Header class="h-10" />
      <main
        class="flex flex-col justify-start md:w-3/4 mx-auto px-4 h-full w-full"
      >
        <slot />
      </main>
      <footer
        class="bg-gradient-to-r from-cyan-300 to-indigo-800 flex justify-around p-4 rounded-t-full w-full"
      >
        <div class="flex items-center gap-8">
          {
            social_medias
              .filter((link: any) => link.inFooter === true)
              .map((link: any) => (
                <a href={link.link} target="_blank" class="text-white">
                  <span class="sr-only">Follow Astro on Mastodon</span>
                  <img src={link.icon} alt={link.alt} class="w-12" />
                </a>
              ))
          }
        </div>
      </footer>
    </div>
  </body>
</html>
